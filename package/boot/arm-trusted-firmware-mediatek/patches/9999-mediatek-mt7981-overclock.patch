--- a/plat/mediatek/mt7981/drivers/pll/pll.c
+++ b/plat/mediatek/mt7981/drivers/pll/pll.c
@@ -70,6 +70,12 @@ unsigned int mtk_get_cpu_freq()
 
 void mtk_pll_init(int skip_dcm_setting)
 {
+	uint32_t readreg;
+	mmio_clrbits_32(ARMPLL_CON1, ARMPLL_CON1_ALL0); // clear all armpll_con1
+	readreg = mmio_read_32(ARMPLL_CON1); //read con1
+	NOTICE("CON1 should 0 actual %X",readreg); //print con1
+	mmio_write_32(ARMPLL_CON1, 0x4B000000);
+	mmio_clrbits_32(ARMPLL_CON0 , DIVIDE_RATIO_BIT4);
 
 	/* Power on PLL */
 	mmio_setbits_32(ARMPLL_PWR_CON0, CON0_PWR_ON);
@@ -94,11 +100,10 @@ void mtk_pll_init(int skip_dcm_setting)
 	mmio_clrbits_32(MPLL_PWR_CON0, CON0_ISO_EN);
 
 	/* Set PLL frequency */
-	mmio_write_32(ARMPLL_CON1, 0x82000000); /* 1.3G */
-
-	//mmio_setbits_32(ARMPLL_CON0, 0x124); /* divider for 650M */
-
-	mmio_setbits_32(ARMPLL_CON0, 0x114); /* divider for 1.3G */
+	readreg = mmio_read_32(ARMPLL_CON1); //read con1
+	NOTICE("CON1 should 0 actual %X",readreg); //print con1
+	mmio_write_32(ARMPLL_CON1, 0x4B000000);
+	mmio_setbits_32(ARMPLL_CON0, 0x104);
 
 	mmio_setbits_32(NET2PLL_CON0, 0x114);
 	mmio_setbits_32(MMPLL_CON0, 0x124);
--- a/plat/mediatek/mt7981/drivers/pll/pll.h
+++ b/plat/mediatek/mt7981/drivers/pll/pll.h
@@ -65,6 +65,8 @@
 #define CON1_PCW_CHG		BIT(31)
 #define UNIV_48M_EN		BIT(27)
 
+#define DIVIDE_RATIO_BIT4	0x10
+#define ARMPLL_CON1_ALL0	0xFF000000
 #define SCP_AXICK_DCM_DIS_EN	BIT(0)
 #define SCP_AXICK_26M_SEL_EN	BIT(4)
 
